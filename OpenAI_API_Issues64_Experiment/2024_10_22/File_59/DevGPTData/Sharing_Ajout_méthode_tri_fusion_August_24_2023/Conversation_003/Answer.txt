ChatGPTL'erreur que vous mentionnez suggère que lors de l'appel à mergeSort, il y a un problème de types. Plus précisément, la signature de la fonction mergeSort attend un std::unique_ptr<Node<T>>& comme premier argument, mais vous semblez lui passer un Node<T>*.Je vois maintenant le problème. L'implémentation actuelle de mergeSort est conçue pour travailler directement avec des pointeurs bruts (Node<T>*), mais dans la définition de la classe, nous utilisons std::unique_ptr<Node<T>> pour gérer la mémoire de manière sécurisée.Pour résoudre ce problème, nous devons adapter les fonctions de tri par fusion pour travailler avec std::unique_ptr. Voici comment vous pouvez le faire :Modifiez la signature de mergeSort pour accepter std::unique_ptr<Node<T>>& au lieu de Node<T>*&.Faites la même chose pour les fonctions merge et frontBackSplit.Modifiez le corps de ces fonctions pour gérer correctement les std::unique_ptr.Je vais vous fournir une version corrigée des fonctions de tri par fusion qui fonctionne avec std::unique_ptr.Voici une version corrigée des méthodes de tri par fusion pour la classe al_llist, adaptée pour travailler avec std::unique_ptr :[CODE_BLOCK_0]Avec ces modifications, la classe al_llist devrait être capable de trier correctement en utilisant des std::unique_ptr. Vous pouvez maintenant essayer à nouveau l'exemple d'utilisation que je vous ai fourni précédemment.