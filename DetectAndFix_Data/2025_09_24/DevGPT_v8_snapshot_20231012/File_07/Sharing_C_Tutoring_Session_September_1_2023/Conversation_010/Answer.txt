ChatGPTCertainly, using malloc and pointers adds another layer of complexity but also flexibility to the program. Let's incorporate these elements:Dynamic Memory Allocation for Student Array: Instead of declaring an array of fixed size, you can dynamically allocate memory for it using malloc.Pointers for Student Data: Instead of using an array of student structs, you'll use an array of pointers to student structs. This aligns well with your bubble sorting function, which expects an array of pointers.Here's how your modified hwk1.cpp could look:[CODE_BLOCK_0]Note that I also included the steps to free the dynamically allocated memory using free(). This is crucial in C and C++ to prevent memory leaks.This example should give your student a good understanding of how to use malloc for dynamic memory allocation and how to use pointers in a meaningful way. Given that you're in the education space, using hands-on examples like this can make abstract concepts much more tangible for learners. Feel free to ask more if you need further clarification.