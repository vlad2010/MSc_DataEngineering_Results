Can you translate this code into english please

#include <stdio.h>
#include <stdlib.h>
#include <time.h> 

void printMatrix(int **matrix, int N) {
    int i, j;
    for (i = 0; i < N; i++) {
        for (j = 0; j < N; j++) {
            printf("%d\t", matrix[i][j]);
        }
        printf("\n");
    }
}


int main(int argc, char *argv[]) {
    
    int N; // Convierte el argumento de la línea de comandos a entero

    if (argc < 2) {
        N = 10;
        printf("No se proporciono valor para N, Se auusto el valor de <N> a: %d\n", N);
        
    } else {
        N = atoi(argv[1]);
    }

    int isPrinted;

    if (argc < 3) {
        isPrinted = 0;        
    } else {
        isPrinted = atoi(argv[2]);
    }

    
    srand(time(NULL));

    // Reserva de memoria
    int **A = (int **)malloc(N * sizeof(int *));
    int **B = (int **)malloc(N * sizeof(int *));
    int **C = (int **)malloc(N * sizeof(int *));

    for (int i = 0; i < N; i++) {
        A[i] = (int *)malloc(N * sizeof(int));
        B[i] = (int *)malloc(N * sizeof(int));
        C[i] = (int *)calloc(N, sizeof(int));
    }
    


    // Llenado de matrices
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            A[i][j] = rand() % 100; 
            B[i][j] = rand() % 100;
            C[i][j] = 0;
        }
    }
    
    clock_t start, end;
    double cpu_time_used;

    start = clock(); // Inicia el cronómetro
    
    // Multiplicacion de matrices 
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            for (int k = 0; k < N; k++) {
                C[i][j] += A[i][k] * B[k][j];
            }
        }
    }

    end = clock(); // Detiene el cronómetro

    cpu_time_used = ((double) (end - start)) / CLOCKS_PER_SEC;

    // Impresion de resultados, si es necesario
    if(isPrinted){
        printf("Matriz A:\n");
        printMatrix(A, N);

        printf("\n\n");

        printf("Matriz B:\n");
        printMatrix(B, N);

        printf("\n\n\n");

        printf("Matriz resultante C (A*B):\n");
        printMatrix(C, N);
    }else{

        printf("%d, %f\n", N, cpu_time_used);
        
    }
    

    
    
    

    // Liberar memoria
    for (int i = 0; i < N; i++) {
        free(A[i]);
        free(B[i]);
        free(C[i]);
    }
    free(A);
    free(B);
    free(C);

    return 0;
}
